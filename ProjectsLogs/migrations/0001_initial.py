# Generated by Django 2.1.2 on 2019-04-17 01:24

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Change',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('explain', models.TextField()),
                ('kind', models.CharField(blank=True, editable=False, max_length=10, null=True)),
                ('accepted', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Change',
                'verbose_name_plural': 'Changes',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Coder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('replay', models.TextField(blank=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('comment_created', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('replay_created', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=70)),
                ('slug', models.SlugField(blank=True)),
                ('created', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('breif', models.TextField(blank=True, null=True)),
                ('under_work', models.BooleanField(default=True)),
                ('can_try', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('coders', models.ManyToManyField(blank=True, to='ProjectsLogs.Coder')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.CharField(max_length=15)),
                ('critical_version', models.BooleanField()),
                ('combitable_with_old_dependencies', models.BooleanField()),
                ('created', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('github_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Version',
                'verbose_name_plural': 'Versions',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WebTechnology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Added',
            fields=[
                ('change_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectsLogs.Change')),
            ],
            bases=('ProjectsLogs.change',),
        ),
        migrations.CreateModel(
            name='Changed',
            fields=[
                ('change_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectsLogs.Change')),
            ],
            bases=('ProjectsLogs.change',),
        ),
        migrations.CreateModel(
            name='Deprecated',
            fields=[
                ('change_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectsLogs.Change')),
            ],
            bases=('ProjectsLogs.change',),
        ),
        migrations.CreateModel(
            name='Fixed',
            fields=[
                ('change_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectsLogs.Change')),
            ],
            bases=('ProjectsLogs.change',),
        ),
        migrations.CreateModel(
            name='Removed',
            fields=[
                ('change_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectsLogs.Change')),
            ],
            bases=('ProjectsLogs.change',),
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('change_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ProjectsLogs.Change')),
            ],
            bases=('ProjectsLogs.change',),
        ),
        migrations.AddField(
            model_name='project',
            name='project_versions',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Version'),
        ),
        migrations.AddField(
            model_name='project',
            name='technologies',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.WebTechnology'),
        ),
        migrations.AddField(
            model_name='change',
            name='user_notes',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Comment'),
        ),
        migrations.AddField(
            model_name='version',
            name='added',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Added'),
        ),
        migrations.AddField(
            model_name='version',
            name='changed',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Changed'),
        ),
        migrations.AddField(
            model_name='version',
            name='deprecated',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Deprecated'),
        ),
        migrations.AddField(
            model_name='version',
            name='fixed',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Fixed'),
        ),
        migrations.AddField(
            model_name='version',
            name='removed',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Removed'),
        ),
        migrations.AddField(
            model_name='version',
            name='security',
            field=models.ManyToManyField(blank=True, to='ProjectsLogs.Security'),
        ),
    ]
